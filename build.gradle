/*
 * Copyright © 2017-2019 WireGuard LLC.
 * Copyright © 2018-2019 Harsh Shandilya <msfjarvis@gmail.com>. All Rights Reserved.
 * SPDX-License-Identifier: Apache-2.0
 */
buildscript {
    apply from: rootProject.file('dependencies.gradle')
    repositories {
        google()
        jcenter()
        maven { url 'https://plugins.gradle.org/m2/' }
    }
    dependencies {
        classpath deps.gradle_plugin.android
        classpath deps.gradle_plugin.kotlin
        classpath deps.gradle_plugin.spotless
    }
}

plugins {
    id "com.github.ben-manes.versions" version "0.27.0"
}

subprojects {
    apply from: rootProject.file('dependencies.gradle')
    apply from: rootProject.file('spotless.gradle')

    repositories {
        google()
        jcenter()
        maven { url 'https://jitpack.io' }
    }

    pluginManager.withPlugin('kotlin-android') {
        dependencies {
            implementation deps.kotlin.stdlib8
        }
    }

    pluginManager.withPlugin('kotlin-kapt') {
        kapt {
            useBuildCache = true
            // https://github.com/google/dagger/issues/1449#issuecomment-495404186
            javacOptions {
                option '-source', '8'
                option '-target', '8'
            }
        }
    }

    if (name == 'app') {
        apply plugin: 'com.android.application'
    } else {
        apply plugin: 'com.android.library'
        android.libraryVariants.all { variant ->
            variant.generateBuildConfigProvider.configure { enabled = false }
        }
    }

    android {
        compileSdkVersion versions.compileSdk
        buildToolsVersion = versions.buildTools
        defaultConfig {
            minSdkVersion versions.minSdk
            targetSdkVersion versions.targetSdk
            versionCode versions.versionCode
            versionName versions.versionName
        }
    }

    tasks.withType(JavaCompile) {
        options.compilerArgs << '-Xlint:unchecked'
        options.deprecation = true
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
        kotlinOptions {
            jvmTarget = '1.8'
        }
    }
}

apply from: rootProject.file('spotless.root.gradle')

tasks {
    wrapper {
        distributionType = Wrapper.DistributionType.ALL
    }
}

task installHook(type: Copy) {
    from 'config'
    into rootProject.file('.git/hooks/')
    rename('pre-push-recommended.sh', 'pre-push')
    fileMode 0755
}
